version: "3"
name: internet_shop
services:
  postgres:
    container_name: postgres
    build: ./services/postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes: 
      - ./services/postgres/data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB_NAME}" , "-U", "${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 15s 

  payment:
    container_name: payment
    build: ./services/payment
    depends_on:
      postgres:
        condition: "service_healthy"
    environment:
      DB_HOST: postgres
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USERNAME}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB_NAME}
      PORT: ${PAYMENT_PORT}
    ports:
      - ${PAYMENT_PORT}:${PAYMENT_PORT}
    
  store:
    container_name: store
    build: ./services/store
    depends_on:
      postgres:
        condition: "service_healthy"
    environment:
      DB_HOST: postgres
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USERNAME}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB_NAME}
    ports:
      - ${STORE_PORT}:8080

  main:
    container_name: main
    build: ./services/main
    ports: 
      - "3001:3001"
    depends_on:
      - postgres

  prometheus:
    container_name: prometheus
    profiles:
      - monitoring
    image: prom/prometheus
    volumes:
      - ./services/prometheus/config.yml:/etc/prometheus/prometheus.yml:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - ${PROMETHEUS_PORT}:9090

  cadvisor:
    container_name: cadvisor
    profiles:
      - monitoring
    image: gcr.io/cadvisor/cadvisor
    ports:
      - ${CADVISOR_PORT}:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  grafana:
    container_name: grafana
    profiles:
      - monitoring
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana_pass
    volumes:
      - ./services/grafana/data:/var/lib/grafana:rw
      - ./services/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    ports:
      - ${GRAFANA_PORT}:3000

  node-exporter:
    container_name: node_exporter
    profiles:
      - monitoring
    image: prom/node-exporter
    ports:
      - ${NODE_EXPORTER_PORT}:9100

  loki:
    container_name: loki
    profiles:
      - monitoring
    image: grafana/loki
    ports:
      - "${LOKI_PORT}:3100"
    volumes:
      - ./services/loki/data:/loki

  promtail:
    container_name: promtail
    profiles:
      - monitoring
    image: grafana/promtail
    volumes:
      - ./services/promtail/config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro